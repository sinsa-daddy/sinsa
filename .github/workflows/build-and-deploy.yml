name: Build and Deploy
on:
  # Runs on pushes targeting the default branch
  push:
    branches: ['main']
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  repository_dispatch:
    types: [regenerate]
  schedule:
    # - cron: '0 7,10,13,16 * * *' # 注意：这里的时间是UTC+8的15点、18点、21点和24点
    - cron: '0 21 * * FRI'

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: 'pages'
  cancel-in-progress: false

jobs:
  build:
    name: Build and Deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Cache turbo build setup
        uses: actions/cache@v3
        with:
          path: |
            apps/sinsa/dist
            packages/datasource-generator/dist
            packages/schema/dist
            packages/service-worker/dist
            packages/solution-calculator/dist
          key: ${{ runner.os }}-turbo-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-turbo-
      - name: Use pnpm@8
        uses: pnpm/action-setup@v4
        with:
          version: 8
      - name: Use Node.js v18
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'pnpm'
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Build
        env:
          NOTION_READ_TOKEN: ${{ secrets.NOTION_READ_TOKEN }}
          NOTION_AURORIAN_DATABASE_ID: ${{ secrets.NOTION_AURORIAN_DATABASE_ID }}
          NOTION_TERM_DATABASE_ID: ${{ secrets.NOTION_TERM_DATABASE_ID }}
          FEISHU_APP_ID: ${{ secrets.FEISHU_APP_ID }}
          FEISHU_APP_SECRET: ${{ secrets.FEISHU_APP_SECRET }}
          FEISHU_COPILOT_APP_ID: ${{ secrets.FEISHU_COPILOT_APP_ID }}
        run: pnpm run build
      - name: Generate SW
        run: cd ./apps/sinsa && pnpm run generate
      # - name: Upload artifact
      #   uses: actions/upload-pages-artifact@v2
      #   with:
      #     path: ./apps/sinsa-web/dist
      - name: Deploy 🚀
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: ./apps/sinsa/dist
          repository-name: sinsa-daddy/sinsa-daddy.github.io
          token: ${{ secrets.DEPLOY_INDEX_ACCESS_TOKEN }}

      # - name: Sync to Gitee
      #   uses: wearerequired/git-mirror-action@master
      #   env:
      #     # 注意在 Settings->Secrets 配置 GITEE_RSA_PRIVATE_KEY
      #     SSH_PRIVATE_KEY: ${{ secrets.GITEE_RSA_PRIVATE_KEY }}
      #   with:
      #     # 注意替换为你的 GitHub 源仓库地址
      #     source-repo: git@github.com:sinsa-daddy/sinsa-daddy.github.io.git
      #     # 注意替换为你的 Gitee 目标仓库地址
      #     destination-repo: git@gitee.com:sinsa-daddy/sinsa-daddy.git

      # - name: Build Gitee Pages
      #   uses: yanglbme/gitee-pages-action@main
      #   with:
      #     # 注意替换为你的 Gitee 用户名
      #     gitee-username: heskeybaozi
      #     # 注意在 Settings->Secrets 配置 GITEE_PASSWORD
      #     gitee-password: ${{ secrets.GITEE_PASSWORD }}
      #     # 注意替换为你的 Gitee 仓库，仓库名严格区分大小写，请准确填写，否则会出错
      #     gitee-repo: sinsa-daddy/sinsa-daddy
      #     # 要部署的分支，默认是 master，若是其他分支，则需要指定（指定的分支必须存在）
      #     branch: gh-pages

  # Deploy:
  #   needs: [build]
  #   environment:
  #     name: github-pages
  #     url: ${{ steps.deployment.outputs.page_url }}
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Deploy to GitHub Pages
  #       id: deployment
  #       uses: actions/deploy-pages@v2
